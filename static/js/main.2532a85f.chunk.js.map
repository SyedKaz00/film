{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/MovieControls.js","components/MovieCard.js","components/Watchlist.js","components/Watched.js","components/ResultCard.js","components/Add.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","state","action","type","watchlist","payload","filter","movie","id","watched","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","props","useReducer","AppReducer","dispatch","useEffect","setItem","stringify","Provider","value","addMovieToWatchlist","removeMovieFromWatchlist","addMovieToWatched","moveToWatchlist","removeFromWatched","children","MovieControls","useContext","onClick","MovieCard","src","poster_path","alt","title","Watchlist","length","map","key","Watched","ResultCard","storedMovie","find","o","storedMovieWatched","watchlistDisabled","watchedDisabled","format","release_date","disabled","Add","useState","query","setQuery","results","setResults","placeholder","onChange","e","preventDefault","target","fetch","process","then","res","json","data","errors","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2532a85f.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"container\">\r\n        <div className=\"inner-content\">\r\n          <div className=\"brand\">\r\n            <Link to=\"/\">WatchList</Link>\r\n          </div>\r\n\r\n          <ul className=\"nav-links\">\r\n            <li>\r\n              <Link to=\"/\">Watch List</Link>\r\n            </li>\r\n\r\n            <li>\r\n              <Link to=\"/watched\">Watched</Link>\r\n            </li>\r\n\r\n            <li>\r\n              <Link to=\"/add\" className=\"btn btn-main\">\r\n                + Add\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","  \r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n      case \"ADD_MOVIE_TO_WATCHLIST\":\r\n        return {\r\n          ...state,\r\n          watchlist: [action.payload, ...state.watchlist],\r\n        };\r\n      case \"REMOVE_MOVIE_FROM_WATCHLIST\":\r\n        return {\r\n          ...state,\r\n          watchlist: state.watchlist.filter(\r\n            (movie) => movie.id !== action.payload\r\n          ),\r\n        };\r\n      case \"ADD_MOVIE_TO_WATCHED\":\r\n        return {\r\n          ...state,\r\n          watchlist: state.watchlist.filter(\r\n            (movie) => movie.id !== action.payload.id\r\n          ),\r\n          watched: [action.payload, ...state.watched],\r\n        };\r\n      case \"MOVE_TO_WATCHLIST\":\r\n        return {\r\n          ...state,\r\n          watched: state.watched.filter(\r\n            (movie) => movie.id !== action.payload.id\r\n          ),\r\n          watchlist: [action.payload, ...state.watchlist],\r\n        };\r\n      case \"REMOVE_FROM_WATCHED\":\r\n        return {\r\n          ...state,\r\n          watched: state.watched.filter((movie) => movie.id !== action.payload),\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\n// initial state\r\nconst initialState = {\r\n  watchlist: localStorage.getItem(\"watchlist\")\r\n    ? JSON.parse(localStorage.getItem(\"watchlist\"))\r\n    : [],\r\n  watched: localStorage.getItem(\"watched\")\r\n    ? JSON.parse(localStorage.getItem(\"watched\"))\r\n    : [],\r\n};\r\n\r\n// create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// provider components\r\nexport const GlobalProvider = (props) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"watchlist\", JSON.stringify(state.watchlist));\r\n    localStorage.setItem(\"watched\", JSON.stringify(state.watched));\r\n  }, [state]);\r\n\r\n  // actions\r\n  const addMovieToWatchlist = (movie) => {\r\n    dispatch({ type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie });\r\n  };\r\n\r\n  const removeMovieFromWatchlist = (id) => {\r\n    dispatch({ type: \"REMOVE_MOVIE_FROM_WATCHLIST\", payload: id });\r\n  };\r\n\r\n  const addMovieToWatched = (movie) => {\r\n    dispatch({ type: \"ADD_MOVIE_TO_WATCHED\", payload: movie });\r\n  };\r\n\r\n  const moveToWatchlist = (movie) => {\r\n    dispatch({ type: \"MOVE_TO_WATCHLIST\", payload: movie });\r\n  };\r\n\r\n  const removeFromWatched = (id) => {\r\n    dispatch({ type: \"REMOVE_FROM_WATCHED\", payload: id });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        watchlist: state.watchlist,\r\n        watched: state.watched,\r\n        addMovieToWatchlist,\r\n        removeMovieFromWatchlist,\r\n        addMovieToWatched,\r\n        moveToWatchlist,\r\n        removeFromWatched,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const MovieControls = ({ type, movie }) => {\r\n  const {\r\n    removeMovieFromWatchlist,\r\n    addMovieToWatched,\r\n    moveToWatchlist,\r\n    removeFromWatched,\r\n  } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div className=\"inner-card-controls\">\r\n      {type === \"watchlist\" && (\r\n        <>\r\n          <button className=\"ctrl-btn\" onClick={() => addMovieToWatched(movie)}>\r\n            <i className=\"fa-fw far fa-eye\"></i>\r\n          </button>\r\n\r\n          <button\r\n            className=\"ctrl-btn\"\r\n            onClick={() => removeMovieFromWatchlist(movie.id)}\r\n          >\r\n            <i className=\"fa-fw fa fa-times\"></i>\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      {type === \"watched\" && (\r\n        <>\r\n          <button className=\"ctrl-btn\" onClick={() => moveToWatchlist(movie)}>\r\n            <i className=\"fa-fw far fa-eye-slash\"></i>\r\n          </button>\r\n\r\n          <button\r\n            className=\"ctrl-btn\"\r\n            onClick={() => removeFromWatched(movie.id)}\r\n          >\r\n            <i className=\"fa-fw fa fa-times\"></i>\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport { MovieControls } from \"./MovieControls.js\";\r\n\r\nexport const MovieCard = ({ movie, type }) => {\r\n  return (\r\n    <div className=\"movie-card\">\r\n      <div className=\"overlay\"></div>\r\n\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n        alt={`${movie.title} Poster`}\r\n      />\r\n\r\n      <MovieControls type={type} movie={movie} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { MovieCard } from \"./MovieCard\";\r\n\r\nexport const Watchlist = () => {\r\n  const { watchlist } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div className=\"movie-page\">\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <h1 className=\"heading\">My Watchlist</h1>\r\n\r\n          <span className=\"count-pill\">\r\n            {watchlist.length} {watchlist.length === 1 ? \"Movie\" : \"Movies\"}\r\n          </span>\r\n        </div>\r\n\r\n        {watchlist.length > 0 ? (\r\n          <div className=\"movie-grid\">\r\n            {watchlist.map((movie) => (\r\n              <MovieCard movie={movie} key={movie.id} type=\"watchlist\" />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <h2 className=\"no-movies\">No movies in your list! Add some!</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { MovieCard } from \"./MovieCard\";\r\n\r\nexport const Watched = () => {\r\n  const { watched } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <div className=\"movie-page\">\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <h1 className=\"heading\">Watched Movies</h1>\r\n\r\n          <span className=\"count-pill\">\r\n            {watched.length} {watched.length === 1 ? \"Movie\" : \"Movies\"}\r\n          </span>\r\n        </div>\r\n\r\n        {watched.length > 0 ? (\r\n          <div className=\"movie-grid\">\r\n            {watched.map((movie) => (\r\n              <MovieCard movie={movie} key={movie.id} type=\"watched\" />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <h2 className=\"no-movies\">No movies in your list! Add some!</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, { useContext } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const ResultCard = ({ movie }) => {\r\n  const {\r\n    addMovieToWatchlist,\r\n    addMovieToWatched,\r\n    watchlist,\r\n    watched,\r\n  } = useContext(GlobalContext);\r\n\r\n  let storedMovie = watchlist.find((o) => o.id === movie.id);\r\n  let storedMovieWatched = watched.find((o) => o.id === movie.id);\r\n\r\n  const watchlistDisabled = storedMovie\r\n    ? true\r\n    : storedMovieWatched\r\n    ? true\r\n    : false;\r\n\r\n  const watchedDisabled = storedMovieWatched ? true : false;\r\n\r\n  return (\r\n    <div className=\"result-card\">\r\n      <div className=\"poster-wrapper\">\r\n        {movie.poster_path ? (\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n            alt={`${movie.title} Poster`}\r\n          />\r\n        ) : (\r\n          <div className=\"filler-poster\" />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"info\">\r\n        <div className=\"header\">\r\n          <h3 className=\"title\">{movie.title}</h3>\r\n          <h4 className=\"release-date\">\r\n            <Moment format=\"YYYY\">{movie.release_date}</Moment>\r\n          </h4>\r\n        </div>\r\n\r\n        <div className=\"controls\">\r\n          <button\r\n            className=\"btn\"\r\n            disabled={watchlistDisabled}\r\n            onClick={() => addMovieToWatchlist(movie)}\r\n          >\r\n            Add to Watchlist\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn\"\r\n            disabled={watchedDisabled}\r\n            onClick={() => addMovieToWatched(movie)}\r\n          >\r\n            Add to Watched\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState} from 'react'\r\nimport { ResultCard } from \"./ResultCard\";\r\nexport const Add = () => {\r\n    const [query, setQuery] = useState(\"\");\r\n   \r\n  const [results, setResults] = useState([]);\r\n    const onChange = (e) => {\r\n        e.preventDefault();\r\n        setQuery(e.target.value);\r\n\r\n        fetch(\r\n            `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1&include_adult=false&query=${e.target.value}`\r\n          )\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n              if (!data.errors) {\r\n                setResults(data.results);\r\n              } else {\r\n                setResults([]);\r\n              }\r\n            });\r\n        \r\n    };\r\n    return (\r\n        <div className=\"add-page\">\r\n            <div className=\"container\">\r\n                <div className=\"add-content\">\r\n                    <div className=\"input-wrapper\">\r\n                        <input type=\"text\"\r\n                        placeholder=\"Search for a movie\"\r\n                        value={query}\r\n                        onChange={onChange}\r\n                        />\r\n                        {results.length > 0 && (\r\n                <ul className=\"results\">\r\n                {results.map((movie) => (\r\n                <li key={movie.id}>\r\n                  <ResultCard movie={movie} />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Watchlist } from \"./components/Watchlist\";\nimport { Watched } from \"./components/Watched\";\nimport { Add } from \"./components/Add\";\nimport { GlobalProvider } from \"./context/GlobalState\";\nimport \"./App.css\";\nimport \"./lib/font-awesome/css/all.min.css\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <Watchlist />\n          </Route>\n          <Route exact path=\"/watched\">\n            <Watched />\n          </Route>\n          <Route exact path=\"/add\">\n            <Add />\n          </Route>\n\n\n        </Switch>\n      </Router>\n      </GlobalProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}